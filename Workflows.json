{
  "version": "3.3.2",
  "description": "PEG Workflows â€” Defines the graph-based orchestration flows, agent roles, and state transitions for the PEG system.",
  "metadata": {
    "updated_at": "2025-07-30T03:05:00-04:00",
    "author": "PEG Orchestrator",
    "source_of_truth": "This file defines the primary orchestration logic, intended to be interpreted by a graph-based engine like LangGraph."
  },
  "core_agent": "PEG",
  "components": [
    "MacroSelector",
    "AutoTune",
    "BioInjection",
    "SessionSync",
    "PersistentMemoryIndex"
  ],
  "agent_roles": {
    "PEG": "Session orchestrator and final arbiter; controls fallback, confirms resolution, logs via LOGGER.",
    "ENGINEER": "Designs macro chains, prompt logic, injects constraints from objective.",
    "VALIDATOR": "Validates prompt structure, schema conformance, DSL/JSON output per enforcement rules.",
    "CHALLENGER": "Stress-tests logic chains, triggers fallback if structural or logic flaws detected.",
    "LOGGER": "Audits file changes, macro mutations, agent actions, and scoring logs.",
    "SCORER": "Scores outputs using the PromptScoreModel.",
    "TESTER": "Injects regression and edge tests from the test suite."
  },
  "workflows": {
    "StandardPromptOrchestration": {
      "entry_point": "intake",
      "graph": {
        "intake": {
          "agent": "PEG",
          "action": "intake_objective",
          "transitions": {
            "objective_identified": "prep"
          }
        },
        "prep": {
          "agent": "PEG",
          "action": "context_tag_scan",
          "transitions": {
            "context_ready": "build"
          }
        },
        "build": {
          "agent": "ENGINEER",
          "action": "macro_chain_build",
          "transitions": {
            "build_complete": "review"
          }
        },
        "review": {
          "agent": "VALIDATOR",
          "action": "test_review",
          "transitions": {
            "validation_passed": "export",
            "validation_failed": "build"
          }
        },
        "export": {
          "agent": "PEG",
          "action": "wrap_export",
          "transitions": {
            "__end__": "__end__"
          }
        }
      }
    }
  },
  "session_sync": {
    "enabled": true,
    "persistent_index": true,
    "cross_session_memory": true
  },
  "fallback_behavior": {
    "on_error": "invoke_macro('reroute_fallback')",
    "on_agent_conflict": "PEG resolves, logs to Journal"
  }
}
