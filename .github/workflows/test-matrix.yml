name: Test Matrix

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        include-optional: [true, false]
        exclude:
          # Python 3.8 not available on newer macOS runners
          - os: macos-latest
            python-version: '3.8'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
        if [ "${{ matrix.include-optional }}" = "true" ]; then
          pip install chromadb || true
        fi

    - name: Install dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
        if ("${{ matrix.include-optional }}" -eq "true") {
          pip install chromadb 2>$null || echo "ChromaDB installation failed, continuing..."
        }

    - name: Run tests
      run: |
        python -m pytest tests/ -v

    - name: Run validation
      run: |
        python validate_repo.py
